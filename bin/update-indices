#!/usr/bin/env python

from subprocess import Popen, PIPE
import os
import sys

from lxml.html import tostring

from simple_cloud_site.files import find_recent_pages
from simple_cloud_site.html import parse_html


def main():
    source_dir = os.path.realpath(os.curdir)

    recent_posts = find_recent_pages(source_dir, count=4)

    # TODO: read template name from a config file
    template = parse_html("_templates/index.html")

    # Find post list placeholder
    # clone
    # populate

    # sanity check placeholders

    with open('index.html', 'wb') as f:
        f.write(tostring(template, encoding="utf-8", method="html"))

    # This is an ugly travesty and depends on https://github.com/w3c/tidy-html5
    # In its defense, it actually works at all which is more than can be said for html5lib, lxml3,
    # BeautifulSoup, etc. and there are no Python 3 migration issuesâ€¦
    tidy = Popen(['tidy-html5', '-utf8', '-modify', '-quiet', '--tidy-mark', 'no',
                  '--wrap', '0', '--indent', 'yes', '--indent-spaces', '4',
                  'index.html'],
                  stderr=PIPE, stdout=PIPE)
    stdout, stderr = tidy.communicate()

    if tidy.returncode or stderr:
        stderr = stderr.decode("utf-8").strip()
        stderr = "\n".join("\t%s" % i.strip() for i in stderr.splitlines())
        print("HTML tidy reported problems:\n", stderr, file=sys.stderr)

    # TODO: Repeat for sub directories?

if __name__ == "__main__":
    main()
